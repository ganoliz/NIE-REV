====== 10. Reconstruction of Packed Binaries ======
The purpose of this lab is to take a memory dump of a running process and reconstruct a running executable out from the dump. 

In the second part of the lab a program a process injecting (or hijacking) another process will be observed and its code will be reconstructed into an executable.

{{:en:labs:10:cv10.zip|}}

==== Useful Tools ====
[[http://woodmann.com/collaborative/tools/images/Bin_LordPE_2010-6-29_3.9_LordPE_1.41_Deluxe_b.zip|LordPE]] - A tool for PE file modification and memory dumping.pamÄ›ti.

[[https://tuts4you.com/download.php?view.3503|Scylla Imports Reconstruction]] - An IAT reconstruction tool.

[[https://www.aldeid.com/wiki/PEiD|PEiD]] - A packer detection tool.

[[http://processhacker.sourceforge.net/|Process Hacker]] - A Process Explorer alternative.

==== Directions ====
A general procedure for unpacking binaries (The exact procedure may differ on used packer).
  - Run the packed executable. Try to locate the Original Entry Point (OEP), in which the program does its first instruction as if it was not packed and stop a debugger there.
  - Make a memory dump of the process. You can copy RAM manually or use an existing tool. LordPE can do it, for example.
  - It is possible that dumped data will not match addresses you see in the debugger (there is a call instruction on address 40162b, but there's something else!). Use PE tools or LordPE or update address of each section to match addresses in the dump. Don't forget to adjust sizes of the sections if doing this manually. This instructs the loader to load the executable on proper addresses.
  - The dump has improperly set the main entry point (you need to set to to OEP) and its IAT is already bound. You can use eg. the ImpRec tool or Scylla Imports Reconstruction to unbind the IAT. The tool accepts IAT position in the running process and recreates a new Import Directory in the binary.


Notes: 
  * Some dumping tools produce dump not directly useful for reconstruction - try a different tool when trying to reconstuct the IAT when the current one does not work.
  * Most of tools cannot create a dump of a process, which is in the SUSPENDED state. The second task, for example, where you have to reconstruct injected code, is difficult with LordPE after being injected. It is, however, sufficient before being injected.
  * If you are bugged by ASLR, you may try to change the IMAGE_OPTIONAL_HEADER field DllCharacteristics to not contain the IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE flags (some tools call it "DLL can move").

==== Direction for Windows 10 ====
  * To dump a process install OllyDBG + OllyDumpEx script. Beware, some OllyDbg versions can detect the UPX packer and start straight at the OEP. The file is not extracted yet, but the disassembly looks so.
  * Use the OllyDumpEx script to dump process's memory.
  * Scylla Import Reconstructor works on Windows 10.